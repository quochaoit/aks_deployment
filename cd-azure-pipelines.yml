trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'HaoACRConn'      # your Azure DevOps service connection
  aksResourceGroup: 'devops-aks-rg'    # resource group of AKS
  aksCluster: 'devops-aks'             # AKS cluster name
  namespace: 'dev'
  containerRegistry: 'devopacr.azurecr.io'
  imageRepository: 'backend'
  tag: 'latest'

steps:
# 1️⃣ Checkout code
- task: Checkout@1
  displayName: 'Checkout code'

# 2️⃣ Connect to AKS
- task: AzureCLI@2
  displayName: 'Connect to AKS'
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksCluster) --overwrite-existing
      kubectl config current-context

# 3️⃣ Deploy backend image to AKS
- task: KubernetesManifest@1
  displayName: 'Deploy backend to AKS'
  inputs:
    action: 'deploy'
    connectionType: 'azureResourceManager'
    azureSubscription: '$(azureSubscription)'
    azureResourceGroup: '$(aksResourceGroup)'
    kubernetesCluster: '$(aksCluster)'
    namespace: '$(namespace)'
    manifests: |
      $(System.DefaultWorkingDirectory)/k8s/backend-deployment.yaml
    containers: |
      $(containerRegistry)/$(imageRepository):$(tag)

# 4️⃣ Verify deployment
- script: |
    kubectl get pods -n $(namespace)
    kubectl get svc -n $(namespace)
  displayName: 'Verify AKS deployment'
